// Very minimal and loose type checking of Quill API

declare function QuillModule(any:any): void;

type op = {retain:number}|{insert:string|{}}|{delete:number};
type ops = Array<op>;
declare class Delta {
  ops: ops;
  diff(d: Delta): Delta;
};
type delta = { ops: ops };

declare class Quill {
  constructor(container: string|HTMLElement, properties?: {}): Quill;
  static import(module: string): QuillModule;
  static register(module: QuillModule): void;
  updateContents(delta: Delta, source: string): void;
  focus(): void;
  blur(): void;
  scroll: any;
  getLength(): number;
  getText(): any;
  formatText(index: number, length: number, format: string|Object, value: any, source?: string): void;
  getContents(): Delta;
  getContents(index: number): Delta;
  getContents(index: number, remaining: number): Delta;
  setContents(delta: Delta): void;
  setContents(delta: delta): void;
  setText(str: string): void;
  deleteText(index: number, length: number, source: string): void;
  on(event: string, f: Function): void;
}

declare module 'quill' {
  declare var exports: Class<Quill>;
}
