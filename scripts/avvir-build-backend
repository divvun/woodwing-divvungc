#!/bin/bash

# Commands to build the backend from source on a macos server

# Could probably install some of this using
# http://apertium.projectjj.com/osx/install-nightly.sh
# but at least divvun-gramcheck needs to be from source

# This doesn't build langdata, we just scp that to the server.

# Still TODO: Keep servlet running with whatever macos uses instead of
# systemd, fix paths in plugin

set -e -u

mkdir -p ~/divvun
cd ~/divvun
export PREFIX="$HOME/divvun/PREFIX/"
LOGS="${PREFIX}"/var/log
mkdir -p "${LOGS}"

# Ensure we have a UTF-8 locale (autotools perl complains about this):
LC_ALL=$(locale -a|grep UTF-8|head -1)
export LC_ALL

# It seems like g++/clang, git and svn are already there, but we need these:
sudo port -N install cmake         # visclg3
sudo port -N install boost         # visclg3
sudo port -N install icu           # visclg3
sudo port -N install automake      # hfst
sudo port -N install autoconf      # hfst
sudo port -N install bison         # hfst (https://github.com/hfst/hfst/issues/178#issuecomment-192242208)
sudo port -N install pugixml       # divvun-gramcheck
sudo port -N install libarchive    # divvun-gramcheck
sudo port -N install libtool       # divvun-gramcheck
sudo port -N install py35-tornado  # apy
sudo port -N install apertium      # apy (for apertium-deshtml/rehtml)
sudo port -N install pkgconfig     # hfst-ospell

git clone https://github.com/GrammarSoft/cg3
(
    cd cg3
    ./cmake.sh -DCMAKE_INSTALL_PREFIX="${PREFIX}"
    make -j3
    make install
)

git clone https://github.com/hfst/hfst
(
    cd hfst
    ./autogen.sh
    ./configure --enable-static --enable-xfst --enable-proc --enable-lexc --enable-all-tools --enable-silent-rules --prefix="${PREFIX}"
    make -j3
    make install
)

git clone https://github.com/hfst/hfst-ospell
(
    cd hfst-ospell
    ./autogen.sh
    ./configure --enable-static --enable-zhfst --without-libxmlpp --prefix="${PREFIX}"
    make -j3
    make install
)

# Adding /opt/local to LDFLAGS etc. means we get old versions of hfst
# etc.,; we just want pugixml and libarchive:
cp /opt/local/include/pugixml.hpp "${PREFIX}/include"
cp /opt/local/include/pugiconfig.hpp "${PREFIX}/include"
cp /opt/local/lib/libpugixml.* "${PREFIX}/lib"

cp /opt/local/include/archive.h "${PREFIX}/include"
cp /opt/local/include/archive_entry.h "${PREFIX}/include"
cp /opt/local/lib/libarchive.* "${PREFIX}/lib"

git clone https://github.com/divvun/libdivvun
(
    cd libdivvun
    export CXXFLAGS="-I${PREFIX}/include ${CXXFLAGS:-}"
    export CPPFLAGS="-I${PREFIX}/include ${CPPFLAGS:-}"
    export PKG_CONFIG_PATH="${PREFIX}/lib/pkgconfig:/opt/local/lib/pkgconfig:${PKG_CONFIG_PATH:-}"
    export LD_LIBRARY_PATH="${PREFIX}/lib:/opt/local/lib:${LD_LIBRARY_PATH:-}"
    export PATH="${PREFIX}/bin:$PATH"
    export LDFLAGS="${LDFLAGS:-} -Wl,-rpath,${PREFIX}/lib -L${PREFIX}/lib"
    ./autogen.sh
    ./configure --enable-static --enable-cgspell --enable-xml --prefix="${PREFIX}"
    make -j3
    make install
)

# Get language data using the script from this repo:
git clone https://github.com/divvun/woodwing-divvungc
(
    cd woodwing-divvungc
    export PATH="${PREFIX}/bin:$PATH"
    bash scripts/update-giella-sme
)

# We just run this from the source dir:
git clone -b giellatekno https://github.com/goavki/apertium-apy
(
    cd apertium-apy
    LC_ALL=en_US.UTF-8 printf "\xc3\xa1vvir:test\n" >users
)

# Make our launchd services:
cat >no.divvun.gramcheck.plist <<EOF
<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
"http://www.apple.com/DTDs/PropertyList-1.0.dtd" >
<plist version='1.0'>
<dict>
<key>Label</key><string>no.divvun.gramcheck</string>
<key>ProgramArguments</key>
<array>
        <string>/opt/local/bin/python3.5</string>
        <string>${PWD}/apertium-apy/servlet.py</string>
        <string>${PREFIX}/share/apertium/modes</string>
        <string>--max-idle-secs</string>
        <string>3600</string>
        <string>--restart-pipe-after</string>
        <string>200</string>
        <string>--max-pipes-per-pair</string>
        <string>2</string>
        <string>--max-users-per-pipe</string>
        <string>1</string>
        <string>--userdb</string>
        <string>${PWD}/apertium-apy/users</string>
</array>
<key>UserName</key><string>$USER</string>
<key>Disabled</key><false/>
<key>KeepAlive</key><true/>
<key>RunAtLoad</key><true/>
<key>EnvironmentVariables</key>
    <dict>
        <key>LC_ALL</key> <string>en_US.UTF-8</string>
        <key>PATH</key>   <string>${PREFIX}/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</string>
    </dict>
<key>StandardErrorPath</key><string>${LOGS}/no.divvun.gramcheck.err</string>
<key>StandardOutPath</key>  <string>${LOGS}/no.divvun.gramcheck.out</string>
<key>SoftResourceLimits</key>
<dict>
    <key>NumberOfFiles</key>
    <integer>2048</integer>
</dict>
</dict>
</plist>
EOF

cat >no.divvun.update.plist <<EOF
<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
"http://www.apple.com/DTDs/PropertyList-1.0.dtd" >
<plist version='1.0'>
<dict>
<key>Label</key><string>no.divvun.update</string>
<key>ProgramArguments</key>
<array>
        <string>/bin/bash</string>
        <string>${PWD}/woodwing-divvungc/scripts/update-giella-sme</string>
</array>
<key>UserName</key><string>$USER</string>
<key>Disabled</key><false/>
<key>StartCalendarInterval</key>
    <dict>
        <key>Hour</key>
        <integer>3</integer>
        <key>Minute</key>
        <integer>15</integer>
    </dict>
<key>RunAtLoad</key><false/>
<key>EnvironmentVariables</key>
    <dict>
        <key>LC_ALL</key> <string>en_US.UTF-8</string>
        <key>PATH</key>   <string>${PREFIX}/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</string>
        <key>HOME</key>   <string>${HOME}</string>
    </dict>
<key>StandardErrorPath</key><string>${LOGS}/no.divvun.update.err</string>
<key>StandardOutPath</key>  <string>${LOGS}/no.divvun.update.out</string>
</dict>
</plist>
EOF

cat >no.divvun.restart-apy.plist <<EOF
<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
"http://www.apple.com/DTDs/PropertyList-1.0.dtd" >
<plist version='1.0'>
<dict>
<key>Label</key><string>no.divvun.restart-apy</string>
<key>ProgramArguments</key>
<array>
        <string>launchctl</string>
        <string>kill</string>
        <string>TERM</string>
        <string>system/no.divvun.gramcheck</string>
</array>
<key>Disabled</key><false/>
<key>StartCalendarInterval</key>
    <dict>
        <key>Hour</key>
        <integer>4</integer>
        <key>Minute</key>
        <integer>15</integer>
    </dict>
<key>RunAtLoad</key><false/>
<key>EnvironmentVariables</key>
    <dict>
        <key>LC_ALL</key> <string>en_US.UTF-8</string>
        <key>PATH</key>   <string>${PREFIX}/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin</string>
    </dict>
<key>StandardErrorPath</key><string>${LOGS}/no.divvun.restart-apy.err</string>
<key>StandardOutPath</key>  <string>${LOGS}/no.divvun.restart-apy.out</string>
</dict>
</plist>
EOF

sudo cp no.divvun.gramcheck.plist /Library/LaunchDaemons/
sudo launchctl load /Library/LaunchDaemons/no.divvun.gramcheck.plist

sudo cp no.divvun.restart-apy.plist /Library/LaunchDaemons/
sudo launchctl load /Library/LaunchDaemons/no.divvun.restart-apy.plist

sudo cp no.divvun.update.plist /Library/LaunchDaemons/
sudo launchctl load /Library/LaunchDaemons/no.divvun.update.plist

### To catch output, open a second terminal and do
# $ sudo launchctl debug system/no.divvun.gramcheck --stderr --stdout
### then restart the service with
# $ sudo launchctl stop no.divvun.gramcheck
# $ sudo launchctl start no.divvun.gramcheck
